import Navbar from "../Navbar";
import { Link, useNavigate } from "react-router-dom";
import { useState, useContext } from "react";
import { getAuth, createUserWithEmailAndPassword } from "firebase/auth";
import { AuthContext } from "../../context/AuthContext";
import {
  addDoc,
  doc,
  setDoc,
  collection,
  serverTimestamp,
} from "firebase/firestore";
import { db } from "../../firebase";
const Auth = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [location, setLocation] = useState("");

console.log(name);
  const navigate = useNavigate();
  const auth = getAuth();

  const { dispatch } = useContext(AuthContext);

  const handleSignup = (event) => {
    event.preventDefault();

    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        // Signed in
        const user = userCredential.user;
        dispatch({ type: "LOGIN", payload: user });
        navigate("/dashboard");
      })
      .catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        // ..
      });
  };

  const handleAdd = async (e) => {
    e.preventDefault();

    try {
      const res = await createUserWithEmailAndPassword(auth, email, password);
      await setDoc(doc(db, "users", res.user.uid), {
        name: name,
        location: location,
        email: email,
        password: password,
        timeStamp: serverTimestamp()
      });
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <>
      <Navbar />
      <section id="authsignup">
        <div className="form">
          <h2>SignUp</h2>
          <form onSubmit={handleAdd}>
            <label htmlFor="name">Name</label>
            <input
              type="text"
              id="namefield"
              required
              name="name"
              placeholder="Your Name"
              onChange={(e) => setName(e.target.value)}

            />
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="emailfield"
              required
              name="email"
              placeholder="Your Email"
              onChange={(e) => setEmail(e.target.value)}
            />

            <label htmlFor="location">Place</label>
            <input
              type="text"
              id="namefield"
              required
              name="location"
              placeholder="Location (City)"
              onChange={(e) => setLocation(e.target.value)}

            />
            <label htmlFor="password">Password</label>
            <input
              type="password"
              id="passwordfield"
              required
              name="password"
              placeholder="Password"
              onChange={(e) => setPassword(e.target.value)}
            />
            <button className="form-signup-btn">Signup</button>

            <p className="form-para">
              Already Registered?{" "}
              <Link to="/auth/login">
                <u>
                  <strong>Login</strong>
                </u>
              </Link>
            </p>
          </form>
        </div>
      </section>
    </>
  );
};

export default Auth;
